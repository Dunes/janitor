14:49:47 root [INFO] Namespace(domain_file=None, heuristic_planning_time=Decimal('1'), log_directory='logs', planning_time=Decimal('5'), problem_file='test.json')
14:49:47 root [INFO] log: test-planning_time(5).log
14:49:47 roborescue.simulator [INFO] Simulator(0).run() deadline=Infinity
14:49:47 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=0, state=ExecutionState.pre_start, action_state=[ActionState(time=0, state=ExecutionState.pre_start, action=Allocate(agent='allocator', start_time=0))]
14:49:47 roborescue.executor [DEBUG] halting police0
14:49:47 roborescue.executor [DEBUG] halting police1
14:49:47 roborescue.executor [DEBUG] halting medic1
14:49:47 roborescue.executor [DEBUG] halting medic0
14:49:47 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:48 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:48 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:49 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:50 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:51 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:52 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:53 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:54 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:55 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:56 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:57 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:58 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:49:59 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:00 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:01 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:02 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:03 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:04 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:05 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:06 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:07 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:08 planner [DEBUG] Planner.get_plan() duration=1, agent='medic1', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:09 planner [DEBUG] Planner.get_plan() duration=1, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity'))], metric=None, time=-1, events=[]
14:50:10 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=11.5, state=ExecutionState.executing, action_state=[ActionState(time=11.5, state=ExecutionState.executing, action=Allocate(agent='allocator', start_time=0))]
14:50:10 action_state [INFO] finishing: Allocate(agent='allocator', start_time=0)
14:50:10 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=12, state=ExecutionState.pre_start, action_state=[ActionState(time=12, state=ExecutionState.pre_start, action=LocalPlan(start_time=12, duration=5, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False)), ActionState(time=12, state=ExecutionState.pre_start, action=LocalPlan(start_time=12, duration=5, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False))]
14:50:10 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=12, state=ExecutionState.pre_start, action=LocalPlan(start_time=12, duration=5, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False))
14:50:10 planner [DEBUG] Planner.get_plan() duration=5, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, time=12, events=[]
14:50:15 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=12, state=ExecutionState.pre_start, action=LocalPlan(start_time=12, duration=5, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False))
14:50:15 planner [DEBUG] Planner.get_plan() duration=5, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, time=12, events=[Event(time=4427, id_='civ4', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=4367, id_='civ7', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=1847, id_='civ5', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=1637, id_='civ0', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=887, id_='civ2', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=197, id_='civ1', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=947, id_='civ10', predicates=[Predicate(name='rescued', becomes=True)], hidden=False), Event(time=677, id_='civ8', predicates=[Predicate(name='rescued', becomes=True)], hidden=False)]
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=16.5, state=ExecutionState.executing, action_state=[ActionState(time=16.5, state=ExecutionState.executing, action=LocalPlan(start_time=12, duration=5, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False)), ActionState(time=16.5, state=ExecutionState.executing, action=LocalPlan(start_time=12, duration=5, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False))]
14:50:20 action_state [INFO] finishing: LocalPlan(start_time=12, duration=5, agent='medic1', goals=[Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ4'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ0'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ7'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ2'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ10'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ5'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ1'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ8'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False)
14:50:20 action_state [INFO] finishing: LocalPlan(start_time=12, duration=5, agent='medic0', goals=[Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity'))], metric={'type': 'minimize', 'weights': {'soft-goal-violations': {Goal(predicate=('rescued', 'civ6'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ3'), deadline=Decimal('Infinity')): Decimal('100000'), 'rescued': Decimal('100000'), Goal(predicate=('rescued', 'civ9'), deadline=Decimal('Infinity')): Decimal('100000'), Goal(predicate=('rescued', 'civ11'), deadline=Decimal('Infinity')): Decimal('100000')}, 'total-time': Decimal('1')}}, failed=False)
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=17, state=ExecutionState.pre_start, action_state=[ActionState(time=17, state=ExecutionState.pre_start, action=Move(start_time=17, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')), ActionState(time=17, state=ExecutionState.pre_start, action=Move(start_time=17, duration=120, agent='medic0', start_node='hospital3-4', end_node='building2-4'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=17, state=ExecutionState.pre_start, action=Move(start_time=17, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=17, state=ExecutionState.pre_start, action=Move(start_time=17, duration=120, agent='medic0', start_node='hospital3-4', end_node='building2-4'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=136.5, state=ExecutionState.executing, action_state=[ActionState(time=136.5, state=ExecutionState.executing, action=Move(start_time=17, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')), ActionState(time=136.5, state=ExecutionState.executing, action=Move(start_time=17, duration=120, agent='medic0', start_node='hospital3-4', end_node='building2-4'))]
14:50:20 action_state [INFO] finishing: Move(start_time=17, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')
14:50:20 action_state [INFO] finishing: Move(start_time=17, duration=120, agent='medic0', start_node='hospital3-4', end_node='building2-4')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=137, state=ExecutionState.pre_start, action_state=[ActionState(time=137, state=ExecutionState.pre_start, action=Rescue(start_time=137, duration=60, agent='medic1', target='civ1', node='building0-1')), ActionState(time=137, state=ExecutionState.pre_start, action=Rescue(start_time=137, duration=60, agent='medic0', target='civ3', node='building2-4'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=137, state=ExecutionState.pre_start, action=Rescue(start_time=137, duration=60, agent='medic1', target='civ1', node='building0-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=137, state=ExecutionState.pre_start, action=Rescue(start_time=137, duration=60, agent='medic0', target='civ3', node='building2-4'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=196.5, state=ExecutionState.executing, action_state=[ActionState(time=196.5, state=ExecutionState.executing, action=Rescue(start_time=137, duration=60, agent='medic1', target='civ1', node='building0-1')), ActionState(time=196.5, state=ExecutionState.executing, action=Rescue(start_time=137, duration=60, agent='medic0', target='civ3', node='building2-4'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=137, duration=60, agent='medic1', target='civ1', node='building0-1')
14:50:20 action_state [INFO] finishing: Rescue(start_time=137, duration=60, agent='medic0', target='civ3', node='building2-4')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=197, state=ExecutionState.pre_start, action_state=[ActionState(time=197, state=ExecutionState.pre_start, action=Load(start_time=197, duration=30, agent='medic1', target='civ1', node='building0-1')), ActionState(time=197, state=ExecutionState.pre_start, action=Load(start_time=197, duration=30, agent='medic0', target='civ3', node='building2-4'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=197, state=ExecutionState.pre_start, action=Load(start_time=197, duration=30, agent='medic1', target='civ1', node='building0-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=197, state=ExecutionState.pre_start, action=Load(start_time=197, duration=30, agent='medic0', target='civ3', node='building2-4'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=226.5, state=ExecutionState.executing, action_state=[ActionState(time=226.5, state=ExecutionState.executing, action=Load(start_time=197, duration=30, agent='medic1', target='civ1', node='building0-1')), ActionState(time=226.5, state=ExecutionState.executing, action=Load(start_time=197, duration=30, agent='medic0', target='civ3', node='building2-4'))]
14:50:20 action_state [INFO] finishing: Load(start_time=197, duration=30, agent='medic1', target='civ1', node='building0-1')
14:50:20 action_state [INFO] finishing: Load(start_time=197, duration=30, agent='medic0', target='civ3', node='building2-4')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=227, state=ExecutionState.pre_start, action_state=[ActionState(time=227, state=ExecutionState.pre_start, action=Move(start_time=227, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')), ActionState(time=227, state=ExecutionState.pre_start, action=Move(start_time=227, duration=120, agent='medic0', start_node='building2-4', end_node='hospital3-4'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=227, state=ExecutionState.pre_start, action=Move(start_time=227, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=227, state=ExecutionState.pre_start, action=Move(start_time=227, duration=120, agent='medic0', start_node='building2-4', end_node='hospital3-4'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=346.5, state=ExecutionState.executing, action_state=[ActionState(time=346.5, state=ExecutionState.executing, action=Move(start_time=227, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')), ActionState(time=346.5, state=ExecutionState.executing, action=Move(start_time=227, duration=120, agent='medic0', start_node='building2-4', end_node='hospital3-4'))]
14:50:20 action_state [INFO] finishing: Move(start_time=227, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')
14:50:20 action_state [INFO] finishing: Move(start_time=227, duration=120, agent='medic0', start_node='building2-4', end_node='hospital3-4')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=347, state=ExecutionState.pre_start, action_state=[ActionState(time=347, state=ExecutionState.pre_start, action=Unload(start_time=347, duration=30, agent='medic1', target='civ1', node='hospital0-0')), ActionState(time=347, state=ExecutionState.pre_start, action=Unload(start_time=347, duration=30, agent='medic0', target='civ3', node='hospital3-4'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=347, state=ExecutionState.pre_start, action=Unload(start_time=347, duration=30, agent='medic1', target='civ1', node='hospital0-0'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=347, state=ExecutionState.pre_start, action=Unload(start_time=347, duration=30, agent='medic0', target='civ3', node='hospital3-4'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=376.5, state=ExecutionState.executing, action_state=[ActionState(time=376.5, state=ExecutionState.executing, action=Unload(start_time=347, duration=30, agent='medic1', target='civ1', node='hospital0-0')), ActionState(time=376.5, state=ExecutionState.executing, action=Unload(start_time=347, duration=30, agent='medic0', target='civ3', node='hospital3-4'))]
14:50:20 action_state [INFO] finishing: Unload(start_time=347, duration=30, agent='medic1', target='civ1', node='hospital0-0')
14:50:20 action_state [INFO] finishing: Unload(start_time=347, duration=30, agent='medic0', target='civ3', node='hospital3-4')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=377, state=ExecutionState.pre_start, action_state=[ActionState(time=377, state=ExecutionState.pre_start, action=Move(start_time=377, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')), ActionState(time=377, state=ExecutionState.pre_start, action=Move(start_time=377, duration=120, agent='medic0', start_node='hospital3-4', end_node='building3-3'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=377, state=ExecutionState.pre_start, action=Move(start_time=377, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=377, state=ExecutionState.pre_start, action=Move(start_time=377, duration=120, agent='medic0', start_node='hospital3-4', end_node='building3-3'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=496.5, state=ExecutionState.executing, action_state=[ActionState(time=496.5, state=ExecutionState.executing, action=Move(start_time=377, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')), ActionState(time=496.5, state=ExecutionState.executing, action=Move(start_time=377, duration=120, agent='medic0', start_node='hospital3-4', end_node='building3-3'))]
14:50:20 action_state [INFO] finishing: Move(start_time=377, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')
14:50:20 action_state [INFO] finishing: Move(start_time=377, duration=120, agent='medic0', start_node='hospital3-4', end_node='building3-3')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=497, state=ExecutionState.pre_start, action_state=[ActionState(time=497, state=ExecutionState.pre_start, action=Move(start_time=497, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1')), ActionState(time=497, state=ExecutionState.pre_start, action=Move(start_time=497, duration=120, agent='medic0', start_node='building3-3', end_node='building3-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=497, state=ExecutionState.pre_start, action=Move(start_time=497, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=497, state=ExecutionState.pre_start, action=Move(start_time=497, duration=120, agent='medic0', start_node='building3-3', end_node='building3-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=616.5, state=ExecutionState.executing, action_state=[ActionState(time=616.5, state=ExecutionState.executing, action=Move(start_time=497, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1')), ActionState(time=616.5, state=ExecutionState.executing, action=Move(start_time=497, duration=120, agent='medic0', start_node='building3-3', end_node='building3-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=497, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1')
14:50:20 action_state [INFO] finishing: Move(start_time=497, duration=120, agent='medic0', start_node='building3-3', end_node='building3-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=617, state=ExecutionState.pre_start, action_state=[ActionState(time=617, state=ExecutionState.pre_start, action=Rescue(start_time=617, duration=60, agent='medic1', target='civ8', node='building1-1')), ActionState(time=617, state=ExecutionState.pre_start, action=Move(start_time=617, duration=120, agent='medic0', start_node='building3-2', end_node='building3-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=617, state=ExecutionState.pre_start, action=Rescue(start_time=617, duration=60, agent='medic1', target='civ8', node='building1-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=617, state=ExecutionState.pre_start, action=Move(start_time=617, duration=120, agent='medic0', start_node='building3-2', end_node='building3-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=676.5, state=ExecutionState.executing, action_state=[ActionState(time=676.5, state=ExecutionState.executing, action=Rescue(start_time=617, duration=60, agent='medic1', target='civ8', node='building1-1'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=617, duration=60, agent='medic1', target='civ8', node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=677, state=ExecutionState.pre_start, action_state=[ActionState(time=677, state=ExecutionState.pre_start, action=Load(start_time=677, duration=30, agent='medic1', target='civ8', node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=677, state=ExecutionState.pre_start, action=Load(start_time=677, duration=30, agent='medic1', target='civ8', node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=706.5, state=ExecutionState.executing, action_state=[ActionState(time=706.5, state=ExecutionState.executing, action=Load(start_time=677, duration=30, agent='medic1', target='civ8', node='building1-1'))]
14:50:20 action_state [INFO] finishing: Load(start_time=677, duration=30, agent='medic1', target='civ8', node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=707, state=ExecutionState.pre_start, action_state=[ActionState(time=707, state=ExecutionState.pre_start, action=Move(start_time=707, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=707, state=ExecutionState.pre_start, action=Move(start_time=707, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=736.5, state=ExecutionState.executing, action_state=[ActionState(time=736.5, state=ExecutionState.executing, action=Move(start_time=617, duration=120, agent='medic0', start_node='building3-2', end_node='building3-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=617, duration=120, agent='medic0', start_node='building3-2', end_node='building3-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=737, state=ExecutionState.pre_start, action_state=[ActionState(time=737, state=ExecutionState.pre_start, action=Rescue(start_time=737, duration=60, agent='medic0', target='civ9', node='building3-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=737, state=ExecutionState.pre_start, action=Rescue(start_time=737, duration=60, agent='medic0', target='civ9', node='building3-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=796.5, state=ExecutionState.executing, action_state=[ActionState(time=796.5, state=ExecutionState.executing, action=Rescue(start_time=737, duration=60, agent='medic0', target='civ9', node='building3-1'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=737, duration=60, agent='medic0', target='civ9', node='building3-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=797, state=ExecutionState.pre_start, action_state=[ActionState(time=797, state=ExecutionState.pre_start, action=Rescue(start_time=797, duration=60, agent='medic0', target='civ6', node='building3-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=797, state=ExecutionState.pre_start, action=Rescue(start_time=797, duration=60, agent='medic0', target='civ6', node='building3-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=826.5, state=ExecutionState.executing, action_state=[ActionState(time=826.5, state=ExecutionState.executing, action=Move(start_time=707, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=707, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=827, state=ExecutionState.pre_start, action_state=[ActionState(time=827, state=ExecutionState.pre_start, action=Rescue(start_time=827, duration=60, agent='medic1', target='civ2', node='building2-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=827, state=ExecutionState.pre_start, action=Rescue(start_time=827, duration=60, agent='medic1', target='civ2', node='building2-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=856.5, state=ExecutionState.executing, action_state=[ActionState(time=856.5, state=ExecutionState.executing, action=Rescue(start_time=797, duration=60, agent='medic0', target='civ6', node='building3-1'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=797, duration=60, agent='medic0', target='civ6', node='building3-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=857, state=ExecutionState.pre_start, action_state=[ActionState(time=857, state=ExecutionState.pre_start, action=Load(start_time=857, duration=30, agent='medic0', target='civ9', node='building3-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=857, state=ExecutionState.pre_start, action=Load(start_time=857, duration=30, agent='medic0', target='civ9', node='building3-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=886.5, state=ExecutionState.executing, action_state=[ActionState(time=886.5, state=ExecutionState.executing, action=Rescue(start_time=827, duration=60, agent='medic1', target='civ2', node='building2-1')), ActionState(time=886.5, state=ExecutionState.executing, action=Load(start_time=857, duration=30, agent='medic0', target='civ9', node='building3-1'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=827, duration=60, agent='medic1', target='civ2', node='building2-1')
14:50:20 action_state [INFO] finishing: Load(start_time=857, duration=30, agent='medic0', target='civ9', node='building3-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=887, state=ExecutionState.pre_start, action_state=[ActionState(time=887, state=ExecutionState.pre_start, action=Rescue(start_time=887, duration=60, agent='medic1', target='civ10', node='building2-1')), ActionState(time=887, state=ExecutionState.pre_start, action=Move(start_time=887, duration=120, agent='medic0', start_node='building3-1', end_node='building2-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=887, state=ExecutionState.pre_start, action=Rescue(start_time=887, duration=60, agent='medic1', target='civ10', node='building2-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=887, state=ExecutionState.pre_start, action=Move(start_time=887, duration=120, agent='medic0', start_node='building3-1', end_node='building2-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=946.5, state=ExecutionState.executing, action_state=[ActionState(time=946.5, state=ExecutionState.executing, action=Rescue(start_time=887, duration=60, agent='medic1', target='civ10', node='building2-1'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=887, duration=60, agent='medic1', target='civ10', node='building2-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=947, state=ExecutionState.pre_start, action_state=[ActionState(time=947, state=ExecutionState.pre_start, action=Move(start_time=947, duration=120, agent='medic1', start_node='building2-1', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=947, state=ExecutionState.pre_start, action=Move(start_time=947, duration=120, agent='medic1', start_node='building2-1', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1006.5, state=ExecutionState.executing, action_state=[ActionState(time=1006.5, state=ExecutionState.executing, action=Move(start_time=887, duration=120, agent='medic0', start_node='building3-1', end_node='building2-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=887, duration=120, agent='medic0', start_node='building3-1', end_node='building2-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1007, state=ExecutionState.pre_start, action_state=[ActionState(time=1007, state=ExecutionState.pre_start, action=Move(start_time=1007, duration=120, agent='medic0', start_node='building2-1', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1007, state=ExecutionState.pre_start, action=Move(start_time=1007, duration=120, agent='medic0', start_node='building2-1', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1066.5, state=ExecutionState.executing, action_state=[ActionState(time=1066.5, state=ExecutionState.executing, action=Move(start_time=947, duration=120, agent='medic1', start_node='building2-1', end_node='building1-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=947, duration=120, agent='medic1', start_node='building2-1', end_node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1067, state=ExecutionState.pre_start, action_state=[ActionState(time=1067, state=ExecutionState.pre_start, action=Move(start_time=1067, duration=120, agent='medic1', start_node='building1-1', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1067, state=ExecutionState.pre_start, action=Move(start_time=1067, duration=120, agent='medic1', start_node='building1-1', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1126.5, state=ExecutionState.executing, action_state=[ActionState(time=1126.5, state=ExecutionState.executing, action=Move(start_time=1007, duration=120, agent='medic0', start_node='building2-1', end_node='building1-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1007, duration=120, agent='medic0', start_node='building2-1', end_node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1127, state=ExecutionState.pre_start, action_state=[ActionState(time=1127, state=ExecutionState.pre_start, action=Move(start_time=1127, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1127, state=ExecutionState.pre_start, action=Move(start_time=1127, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1186.5, state=ExecutionState.executing, action_state=[ActionState(time=1186.5, state=ExecutionState.executing, action=Move(start_time=1067, duration=120, agent='medic1', start_node='building1-1', end_node='building0-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1067, duration=120, agent='medic1', start_node='building1-1', end_node='building0-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1187, state=ExecutionState.pre_start, action_state=[ActionState(time=1187, state=ExecutionState.pre_start, action=Move(start_time=1187, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1187, state=ExecutionState.pre_start, action=Move(start_time=1187, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1246.5, state=ExecutionState.executing, action_state=[ActionState(time=1246.5, state=ExecutionState.executing, action=Move(start_time=1127, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1127, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1247, state=ExecutionState.pre_start, action_state=[ActionState(time=1247, state=ExecutionState.pre_start, action=Rescue(start_time=1247, duration=60, agent='medic0', target='civ11', node='building1-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1247, state=ExecutionState.pre_start, action=Rescue(start_time=1247, duration=60, agent='medic0', target='civ11', node='building1-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1306.5, state=ExecutionState.executing, action_state=[ActionState(time=1306.5, state=ExecutionState.executing, action=Move(start_time=1187, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')), ActionState(time=1306.5, state=ExecutionState.executing, action=Rescue(start_time=1247, duration=60, agent='medic0', target='civ11', node='building1-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1187, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')
14:50:20 action_state [INFO] finishing: Rescue(start_time=1247, duration=60, agent='medic0', target='civ11', node='building1-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1307, state=ExecutionState.pre_start, action_state=[ActionState(time=1307, state=ExecutionState.pre_start, action=Unload(start_time=1307, duration=30, agent='medic1', target='civ8', node='hospital0-0')), ActionState(time=1307, state=ExecutionState.pre_start, action=Move(start_time=1307, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1307, state=ExecutionState.pre_start, action=Unload(start_time=1307, duration=30, agent='medic1', target='civ8', node='hospital0-0'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1307, state=ExecutionState.pre_start, action=Move(start_time=1307, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1336.5, state=ExecutionState.executing, action_state=[ActionState(time=1336.5, state=ExecutionState.executing, action=Unload(start_time=1307, duration=30, agent='medic1', target='civ8', node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Unload(start_time=1307, duration=30, agent='medic1', target='civ8', node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1337, state=ExecutionState.pre_start, action_state=[ActionState(time=1337, state=ExecutionState.pre_start, action=Move(start_time=1337, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1337, state=ExecutionState.pre_start, action=Move(start_time=1337, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1426.5, state=ExecutionState.executing, action_state=[ActionState(time=1426.5, state=ExecutionState.executing, action=Move(start_time=1307, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1307, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1427, state=ExecutionState.pre_start, action_state=[ActionState(time=1427, state=ExecutionState.pre_start, action=Move(start_time=1427, duration=120, agent='medic0', start_node='building1-1', end_node='building1-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1427, state=ExecutionState.pre_start, action=Move(start_time=1427, duration=120, agent='medic0', start_node='building1-1', end_node='building1-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1456.5, state=ExecutionState.executing, action_state=[ActionState(time=1456.5, state=ExecutionState.executing, action=Move(start_time=1337, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1337, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1457, state=ExecutionState.pre_start, action_state=[ActionState(time=1457, state=ExecutionState.pre_start, action=Move(start_time=1457, duration=120, agent='medic1', start_node='building0-1', end_node='building0-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1457, state=ExecutionState.pre_start, action=Move(start_time=1457, duration=120, agent='medic1', start_node='building0-1', end_node='building0-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1546.5, state=ExecutionState.executing, action_state=[ActionState(time=1546.5, state=ExecutionState.executing, action=Move(start_time=1427, duration=120, agent='medic0', start_node='building1-1', end_node='building1-0'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1427, duration=120, agent='medic0', start_node='building1-1', end_node='building1-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1547, state=ExecutionState.pre_start, action_state=[ActionState(time=1547, state=ExecutionState.pre_start, action=Move(start_time=1547, duration=120, agent='medic0', start_node='building1-0', end_node='hospital0-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1547, state=ExecutionState.pre_start, action=Move(start_time=1547, duration=120, agent='medic0', start_node='building1-0', end_node='hospital0-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1576.5, state=ExecutionState.executing, action_state=[ActionState(time=1576.5, state=ExecutionState.executing, action=Move(start_time=1457, duration=120, agent='medic1', start_node='building0-1', end_node='building0-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1457, duration=120, agent='medic1', start_node='building0-1', end_node='building0-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1577, state=ExecutionState.pre_start, action_state=[ActionState(time=1577, state=ExecutionState.pre_start, action=Rescue(start_time=1577, duration=60, agent='medic1', target='civ0', node='building0-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1577, state=ExecutionState.pre_start, action=Rescue(start_time=1577, duration=60, agent='medic1', target='civ0', node='building0-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1636.5, state=ExecutionState.executing, action_state=[ActionState(time=1636.5, state=ExecutionState.executing, action=Rescue(start_time=1577, duration=60, agent='medic1', target='civ0', node='building0-2'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=1577, duration=60, agent='medic1', target='civ0', node='building0-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1637, state=ExecutionState.pre_start, action_state=[ActionState(time=1637, state=ExecutionState.pre_start, action=Load(start_time=1637, duration=30, agent='medic1', target='civ0', node='building0-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1637, state=ExecutionState.pre_start, action=Load(start_time=1637, duration=30, agent='medic1', target='civ0', node='building0-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1666.5, state=ExecutionState.executing, action_state=[ActionState(time=1666.5, state=ExecutionState.executing, action=Load(start_time=1637, duration=30, agent='medic1', target='civ0', node='building0-2')), ActionState(time=1666.5, state=ExecutionState.executing, action=Move(start_time=1547, duration=120, agent='medic0', start_node='building1-0', end_node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Load(start_time=1637, duration=30, agent='medic1', target='civ0', node='building0-2')
14:50:20 action_state [INFO] finishing: Move(start_time=1547, duration=120, agent='medic0', start_node='building1-0', end_node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1667, state=ExecutionState.pre_start, action_state=[ActionState(time=1667, state=ExecutionState.pre_start, action=Move(start_time=1667, duration=120, agent='medic1', start_node='building0-2', end_node='building0-3')), ActionState(time=1667, state=ExecutionState.pre_start, action=Unload(start_time=1667, duration=30, agent='medic0', target='civ9', node='hospital0-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1667, state=ExecutionState.pre_start, action=Move(start_time=1667, duration=120, agent='medic1', start_node='building0-2', end_node='building0-3'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1667, state=ExecutionState.pre_start, action=Unload(start_time=1667, duration=30, agent='medic0', target='civ9', node='hospital0-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1696.5, state=ExecutionState.executing, action_state=[ActionState(time=1696.5, state=ExecutionState.executing, action=Unload(start_time=1667, duration=30, agent='medic0', target='civ9', node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Unload(start_time=1667, duration=30, agent='medic0', target='civ9', node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1697, state=ExecutionState.pre_start, action_state=[ActionState(time=1697, state=ExecutionState.pre_start, action=Move(start_time=1697, duration=120, agent='medic0', start_node='hospital0-0', end_node='building1-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1697, state=ExecutionState.pre_start, action=Move(start_time=1697, duration=120, agent='medic0', start_node='hospital0-0', end_node='building1-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1786.5, state=ExecutionState.executing, action_state=[ActionState(time=1786.5, state=ExecutionState.executing, action=Move(start_time=1667, duration=120, agent='medic1', start_node='building0-2', end_node='building0-3'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1667, duration=120, agent='medic1', start_node='building0-2', end_node='building0-3')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1787, state=ExecutionState.pre_start, action_state=[ActionState(time=1787, state=ExecutionState.pre_start, action=Rescue(start_time=1787, duration=60, agent='medic1', target='civ5', node='building0-3'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1787, state=ExecutionState.pre_start, action=Rescue(start_time=1787, duration=60, agent='medic1', target='civ5', node='building0-3'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1816.5, state=ExecutionState.executing, action_state=[ActionState(time=1816.5, state=ExecutionState.executing, action=Move(start_time=1697, duration=120, agent='medic0', start_node='hospital0-0', end_node='building1-0'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1697, duration=120, agent='medic0', start_node='hospital0-0', end_node='building1-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1817, state=ExecutionState.pre_start, action_state=[ActionState(time=1817, state=ExecutionState.pre_start, action=Move(start_time=1817, duration=120, agent='medic0', start_node='building1-0', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1817, state=ExecutionState.pre_start, action=Move(start_time=1817, duration=120, agent='medic0', start_node='building1-0', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1846.5, state=ExecutionState.executing, action_state=[ActionState(time=1846.5, state=ExecutionState.executing, action=Rescue(start_time=1787, duration=60, agent='medic1', target='civ5', node='building0-3'))]
14:50:20 action_state [INFO] finishing: Rescue(start_time=1787, duration=60, agent='medic1', target='civ5', node='building0-3')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1847, state=ExecutionState.pre_start, action_state=[ActionState(time=1847, state=ExecutionState.pre_start, action=Move(start_time=1847, duration=120, agent='medic1', start_node='building0-3', end_node='building0-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1847, state=ExecutionState.pre_start, action=Move(start_time=1847, duration=120, agent='medic1', start_node='building0-3', end_node='building0-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1936.5, state=ExecutionState.executing, action_state=[ActionState(time=1936.5, state=ExecutionState.executing, action=Move(start_time=1817, duration=120, agent='medic0', start_node='building1-0', end_node='building1-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1817, duration=120, agent='medic0', start_node='building1-0', end_node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1937, state=ExecutionState.pre_start, action_state=[ActionState(time=1937, state=ExecutionState.pre_start, action=Move(start_time=1937, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1937, state=ExecutionState.pre_start, action=Move(start_time=1937, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1966.5, state=ExecutionState.executing, action_state=[ActionState(time=1966.5, state=ExecutionState.executing, action=Move(start_time=1847, duration=120, agent='medic1', start_node='building0-3', end_node='building0-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1847, duration=120, agent='medic1', start_node='building0-3', end_node='building0-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=1967, state=ExecutionState.pre_start, action_state=[ActionState(time=1967, state=ExecutionState.pre_start, action=Move(start_time=1967, duration=120, agent='medic1', start_node='building0-2', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=1967, state=ExecutionState.pre_start, action=Move(start_time=1967, duration=120, agent='medic1', start_node='building0-2', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2056.5, state=ExecutionState.executing, action_state=[ActionState(time=2056.5, state=ExecutionState.executing, action=Move(start_time=1937, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1937, duration=120, agent='medic0', start_node='building1-1', end_node='building1-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2057, state=ExecutionState.pre_start, action_state=[ActionState(time=2057, state=ExecutionState.pre_start, action=Load(start_time=2057, duration=30, agent='medic0', target='civ11', node='building1-2'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2057, state=ExecutionState.pre_start, action=Load(start_time=2057, duration=30, agent='medic0', target='civ11', node='building1-2'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2086.5, state=ExecutionState.executing, action_state=[ActionState(time=2086.5, state=ExecutionState.executing, action=Move(start_time=1967, duration=120, agent='medic1', start_node='building0-2', end_node='building0-1')), ActionState(time=2086.5, state=ExecutionState.executing, action=Load(start_time=2057, duration=30, agent='medic0', target='civ11', node='building1-2'))]
14:50:20 action_state [INFO] finishing: Move(start_time=1967, duration=120, agent='medic1', start_node='building0-2', end_node='building0-1')
14:50:20 action_state [INFO] finishing: Load(start_time=2057, duration=30, agent='medic0', target='civ11', node='building1-2')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2087, state=ExecutionState.pre_start, action_state=[ActionState(time=2087, state=ExecutionState.pre_start, action=Move(start_time=2087, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')), ActionState(time=2087, state=ExecutionState.pre_start, action=Move(start_time=2087, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2087, state=ExecutionState.pre_start, action=Move(start_time=2087, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2087, state=ExecutionState.pre_start, action=Move(start_time=2087, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2206.5, state=ExecutionState.executing, action_state=[ActionState(time=2206.5, state=ExecutionState.executing, action=Move(start_time=2087, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')), ActionState(time=2206.5, state=ExecutionState.executing, action=Move(start_time=2087, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2087, duration=120, agent='medic1', start_node='building0-1', end_node='hospital0-0')
14:50:20 action_state [INFO] finishing: Move(start_time=2087, duration=120, agent='medic0', start_node='building1-2', end_node='building1-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2207, state=ExecutionState.pre_start, action_state=[ActionState(time=2207, state=ExecutionState.pre_start, action=Unload(start_time=2207, duration=30, agent='medic1', target='civ0', node='hospital0-0')), ActionState(time=2207, state=ExecutionState.pre_start, action=Move(start_time=2207, duration=120, agent='medic0', start_node='building1-1', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2207, state=ExecutionState.pre_start, action=Unload(start_time=2207, duration=30, agent='medic1', target='civ0', node='hospital0-0'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2207, state=ExecutionState.pre_start, action=Move(start_time=2207, duration=120, agent='medic0', start_node='building1-1', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2236.5, state=ExecutionState.executing, action_state=[ActionState(time=2236.5, state=ExecutionState.executing, action=Unload(start_time=2207, duration=30, agent='medic1', target='civ0', node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Unload(start_time=2207, duration=30, agent='medic1', target='civ0', node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2237, state=ExecutionState.pre_start, action_state=[ActionState(time=2237, state=ExecutionState.pre_start, action=Move(start_time=2237, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2237, state=ExecutionState.pre_start, action=Move(start_time=2237, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2326.5, state=ExecutionState.executing, action_state=[ActionState(time=2326.5, state=ExecutionState.executing, action=Move(start_time=2207, duration=120, agent='medic0', start_node='building1-1', end_node='building0-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2207, duration=120, agent='medic0', start_node='building1-1', end_node='building0-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2327, state=ExecutionState.pre_start, action_state=[ActionState(time=2327, state=ExecutionState.pre_start, action=Move(start_time=2327, duration=120, agent='medic0', start_node='building0-1', end_node='hospital0-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2327, state=ExecutionState.pre_start, action=Move(start_time=2327, duration=120, agent='medic0', start_node='building0-1', end_node='hospital0-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2356.5, state=ExecutionState.executing, action_state=[ActionState(time=2356.5, state=ExecutionState.executing, action=Move(start_time=2237, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2237, duration=120, agent='medic1', start_node='hospital0-0', end_node='building0-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2357, state=ExecutionState.pre_start, action_state=[ActionState(time=2357, state=ExecutionState.pre_start, action=Move(start_time=2357, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2357, state=ExecutionState.pre_start, action=Move(start_time=2357, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2446.5, state=ExecutionState.executing, action_state=[ActionState(time=2446.5, state=ExecutionState.executing, action=Move(start_time=2327, duration=120, agent='medic0', start_node='building0-1', end_node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2327, duration=120, agent='medic0', start_node='building0-1', end_node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2447, state=ExecutionState.pre_start, action_state=[ActionState(time=2447, state=ExecutionState.pre_start, action=Unload(start_time=2447, duration=30, agent='medic0', target='civ11', node='hospital0-0'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2447, state=ExecutionState.pre_start, action=Unload(start_time=2447, duration=30, agent='medic0', target='civ11', node='hospital0-0'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2476.5, state=ExecutionState.executing, action_state=[ActionState(time=2476.5, state=ExecutionState.executing, action=Move(start_time=2357, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1')), ActionState(time=2476.5, state=ExecutionState.executing, action=Unload(start_time=2447, duration=30, agent='medic0', target='civ11', node='hospital0-0'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2357, duration=120, agent='medic1', start_node='building0-1', end_node='building1-1')
14:50:20 action_state [INFO] finishing: Unload(start_time=2447, duration=30, agent='medic0', target='civ11', node='hospital0-0')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2477, state=ExecutionState.pre_start, action_state=[ActionState(time=2477, state=ExecutionState.pre_start, action=Move(start_time=2477, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1')), ActionState(time=2477, state=ExecutionState.pre_start, action=Move(start_time=2477, duration=120, agent='medic0', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2477, state=ExecutionState.pre_start, action=Move(start_time=2477, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1'))
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2477, state=ExecutionState.pre_start, action=Move(start_time=2477, duration=120, agent='medic0', start_node='hospital0-0', end_node='building0-1'))
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2596.5, state=ExecutionState.executing, action_state=[ActionState(time=2596.5, state=ExecutionState.executing, action=Move(start_time=2477, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1')), ActionState(time=2596.5, state=ExecutionState.executing, action=Move(start_time=2477, duration=120, agent='medic0', start_node='hospital0-0', end_node='building0-1'))]
14:50:20 action_state [INFO] finishing: Move(start_time=2477, duration=120, agent='medic1', start_node='building1-1', end_node='building2-1')
14:50:20 action_state [INFO] finishing: Move(start_time=2477, duration=120, agent='medic0', start_node='hospital0-0', end_node='building0-1')
14:50:20 roborescue.simulator [DEBUG] Simulator(0).process_action_state() time=2597, state=ExecutionState.pre_start, action_state=[ActionState(time=2597, state=ExecutionState.pre_start, action=Load(start_time=2597, duration=30, agent='medic1', target='civ2', node='building2-1')), ActionState(time=2597, state=ExecutionState.pre_start, action=Rescue(start_time=2597, duration=60, agent='medic0', target='civ1', node='building0-1'))]
14:50:20 roborescue.executor [DEBUG] AgentExecutor.notify_action_starting() action_state=ActionState(time=2597, state=ExecutionState.pre_start, action=Load(start_time=2597, duration=30, agent='medic1', target='civ2', node='building2-1'))
14:50:20 roborescue.simulator [ERROR] medic0 has stalled attempting: Rescue(start_time=2597, duration=60, agent='medic0', target='civ1', node='building0-1')
14:50:20 roborescue.simulator [ERROR] agent state: {'available': True, 'empty': True, 'at': [True, 'building0-1']}
14:50:20 roborescue.simulator [INFO] Goal achieved: 1/2
14:50:20 roborescue.simulator [INFO] Planner called: 0
14:50:20 roborescue.simulator [INFO] Total time taken: 2597
14:50:20 roborescue.simulator [INFO] Time spent planning: 0
14:50:20 roborescue.simulator [INFO] time_waiting_for_actions_to_finish 0
14:50:20 roborescue.simulator [INFO] time_waiting_for_planner_to_finish 0
14:50:20 roborescue.simulator [INFO] remaining temp nodes: []
Traceback (most recent call last):
  File "./main.py", line 171, in <module>
    run_roborescue_simulator()
  File "./main.py", line 162, in run_roborescue_simulator
    result = simulator.run()
  File "/home/jack/work/simulator/src/roborescue/simulator.py", line 75, in run
    self.process_action_states(action_states)
  File "/home/jack/work/simulator/src/roborescue/simulator.py", line 91, in process_action_states
    self.start_actions(action_states)
  File "/home/jack/work/simulator/src/roborescue/simulator.py", line 110, in start_actions
    raise ExecutionError("agent has stalled")
planning_exceptions.ExecutionError: agent has stalled
