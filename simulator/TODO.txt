
	# -- only replan on plan invalidation (because of new knowledge) ### BINGO
		# done via changing problems so only get new knowledge when visiting extra dirty rooms

* Get planner running on big domains in cloud

* get simulator working with roborescue again (is it broken, I don't know)
* rerun problem in cloud

* run trucks domain problems in cloud

-- run problems on new code
-- run problems on centralised planner code
-- see what the best allocate and local plan times are
-- compare against centralised planner that replans on new knowledge
-- What about when we get new knowledge (just for Extra Dirty tasks)

-- how many problems is good enough?


# PDDL domains to looked at:
	* airports
	* pipesworld
	* satelite
		* good candidate has multiple satelites and goals
		* send window is perhaps not great (only one send window
		* doesn't appear to be any interdependencies between "agents"
		* best was satellite-complex-time-windows-strips
	* truck
		* good candidate, but needs modification
		* make sea and land delivery routes, such that delivering a package requires cooperation
	* UMTS
	* ipc-2004/settlers-strips
		* model locations as agents?
		* model vehicle as agents?
# Airport and UMTS appear to be very hard (see ICAPS-temporal-planning.pdf)
# see ~/pddl-instances/ipc-{2004,2006}
# CHOSE TRUCKS IN THE END


# Auto add package that are in an agent to its list of won bids before starting actual bidding
	# requires dealing with requirements too!
	# ie. should a replan occur, if an agent is currently carrying a package then it auto wins that bid that created the goal
		# should the bid be a requirement, then the requiring agent should also auto-win said task

# create problems for trucks domain
